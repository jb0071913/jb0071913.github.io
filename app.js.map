{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/app.js","webpack:///./app/components/and-or-switch.component.html","webpack:///./app/components/and-or-switch.component.js","webpack:///./app/components/collapsible-panel.component.html","webpack:///./app/components/collapsible-panel.component.js","webpack:///./app/components/components.module.js","webpack:///./app/components/query-builder.component.html","webpack:///./app/components/query-builder.component.js","webpack:///./app/components/query-builder.constants.js","webpack:///./app/components/rule-set.component.html","webpack:///./app/components/rule-set.component.js","webpack:///./app/components/rule.component.html","webpack:///./app/components/rule.component.js","webpack:///./app/demo/demo-data.service.js","webpack:///./app/demo/demo-options.component.html","webpack:///./app/demo/demo-options.component.js","webpack:///./app/demo/demo.controller.js","webpack:///./app/demo/demo.dialog.html","webpack:///./app/demo/demo.html","webpack:///./app/demo/demo.module.js","webpack:///./app/directives/directives.module.js","webpack:///./app/directives/rule-size.directive.js","webpack:///./app/services/field-data.service.js","webpack:///./app/services/filter-data.service.js","webpack:///./app/services/filter-transformation.service.js","webpack:///./app/services/rule-data.service.js","webpack:///./app/services/services.module.js"],"names":["angular","module","config","$locationProvider","$routeProvider","hashPrefix","otherwise","redirectTo","component","template","require","bindings","data","disableAnd","disableOr","disabled","displayOptions","controller","vm","switch","title","titleSize","allowEmptyRules","childRule","childRuleSet","conditionOptions","fields","initialCondition","mixRules","mode","operators","preDefinedRules","queryBuilderController","filterTransformationService","queryBuilderConstants","$onInit","onInit","mapModel","undefined","condition","rules","rule","ruleSet","entityTerms","includeModel","logicalTerms","and","or","useTextButtons","Mode","BUILD","showModel","userInputNames","predicateTree","getPredicateTree","constant","Entity","RULE","RULE_SET","ENTRY","Operators","CONTAINS","DOES_NOT_CONTAIN","DOES_NOT_END_WITH","DOES_NOT_MATCH","DOES_NOT_START_WITH","ENDS_WITH","EXACT_MATCH","REGEX","STARTS_WITH","defaultChildRule","defaultChildRuleSet","isFirst","onRemoveRuleSet","ruleSetController","uuid","addRule","addRuleSet","checkCondition","fieldsAvailable","onFieldChange","onOperatorChange","operatorsByField","Map","operatorsInUseByField","removeRule","removeRuleSet","savedConditionOptions","selectedFilterChanged","localConditionOptions","errorMessage","Error","_filterUserInputRules","copy","length","type","enable","_applyConditionCheck","forEach","operator","field","fieldsForRules","_","cloneDeep","set","id","_getRuleTemplate","find","get","name","value","_updateOperatorInUseForField","_applyOperatorRestrictions","push","_getRuleSetTemplate","option","property","newField","oldField","callback","newOperator","oldOperator","index","findIndex","r","splice","selectedFilter","concat","SINGLE_OPERATOR_ALLOWED","operatorsInUse","allOperators","allOperatorValues","map","op","permittedOperators","without","intersection","indexOf","_toggleRuleFieldUse","names","isUserInput","userInput","defaultTemplate","_getTemplate","applyTemplate","v4","fieldId","remove","allowEmpty","onRemove","options","ruleController","selectedField","selectedOperator","selectedFieldChange","selectedOperatorChange","userInputNameSearch","userInputNameUpdated","userInputToggled","valueChanged","valueLabel","valueSearch","description","display","matchedField","treatAs","_constructValueLabel","values","validOperators","text","filter","toLowerCase","userInputNameSearchText","filterType","searchValueText","operatorValue","factory","DATA","build","show","render","entry","allowCaseSensitive","getData","key","includeModelChanged","logicTermsChanged","useTextButtonsChanged","demoOptionsController","when","demoController","controllerAs","$mdDialog","demoDataService","fieldDataService","filterDataService","ruleDataService","demos","getFields","logicTerms","openDialog","getOperators","queryFilters","getFilters","activate","quickFilterFields","val","ev","bindToController","clickOutsideToClose","DialogController","locals","builderData","targetEvent","$scope","close","cancel","directive","link","scope","elem","attr","ngModel","validate","$modelValue","$setValidity","ruleSizePresent","ruleSize","$watch","newValue","oldValue","filters","multipleValues","i","allowWildcards","filterBuilderModel","_mapRuleSet","_mapRule","criteria","criteriaNameByFieldName","_mapValues","ruleSets","toUpperCase","children","attributions","vals","Array","isArray","result","escapeRegExp"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'use strict';\r\n\r\nangular.module('queryBuilder', [\r\n  'ngAnimate',\r\n  'ngRoute',\r\n  'ngMaterial',\r\n  'ngMessages',\r\n  'angular-uuid',\r\n  'queryBuilder.services',\r\n  'queryBuilder.components',\r\n  'queryBuilder.demo',\r\n  'queryBuilder.directives'\r\n]).\r\nconfig(['$locationProvider', '$routeProvider', function($locationProvider, $routeProvider) {\r\n  $locationProvider.hashPrefix('!');\r\n  $routeProvider.otherwise({redirectTo: '/QueryBuilder/demo'});\r\n}]);\r\n","// Module\nvar code = \"<md-radio-group ng-model=\\\"$ctrl.data.condition\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\"\\n                ng-if=\\\"$ctrl.data.rules.length > 1\\\"\\n                ng-disabled=\\\"$ctrl.disabled\\\">\\n    <md-radio-button value=\\\"and\\\" \\n                     ng-disabled=\\\"$ctrl.disableAnd || ($ctrl.data.condition === 'criteria' && $ctrl.data.rules.length)\\\">\\n        {{$ctrl.displayOptions ? $ctrl.displayOptions.and : 'And'}}\\n        <md-tooltip>Apply logical AND</md-tooltip>\\n    </md-radio-button>\\n    <md-radio-button value=\\\"or\\\" \\n                     ng-disabled=\\\"$ctrl.disableOr || ($ctrl.data.condition === 'criteria' && $ctrl.data.rules.length)\\\">\\n        {{$ctrl.displayOptions ? $ctrl.displayOptions.or : 'Or'}}\\n        <md-tooltip>Apply logical OR</md-tooltip>\\n    </md-radio-button>\\n</md-radio-group>\";\n// Exports\nmodule.exports = code;","'use strict';\n\nangular.module('queryBuilder.components')\n.component('andOrSwitch', {\n    template: require('./and-or-switch.component.html'),\n    bindings: {\n        data: '<',\n        disableAnd: '<?',\n        disableOr: '<?',\n        disabled: '<?',\n        displayOptions: '<?'\n    },\n    controller: function() {\n        let vm = this;\n    }\n});","// Module\nvar code = \"<div class=\\\"collapsible-panel-container\\\">\\n    <div ng-click=\\\"$ctrl.switch = !$ctrl.switch\\\" layout=\\\"row\\\" layout-align=\\\"start start\\\" flex>\\n        <md-icon flex=\\\"5\\\" ng-if=\\\"!$ctrl.switch\\\">keyboard_arrow_down</md-icon>\\n        <md-icon flex=\\\"5\\\" ng-if=\\\"$ctrl.switch\\\">keyboard_arrow_up</md-icon>\\n        <h4 ng-if=\\\"$ctrl.titleSize === 4 || !$ctrl.titleSize\\\">{{$ctrl.title}}</h4>\\n        <h3 ng-if=\\\"$ctrl.titleSize === 3\\\">{{$ctrl.title}}</h3>\\n    </div>\\n</div>\";\n// Exports\nmodule.exports = code;","'use strict';\n\nangular.module('queryBuilder.components')\n.component('collapsiblePanel', {\n    template: require('./collapsible-panel.component.html'),\n    bindings: {\n        switch: '=',\n        title: '@',\n        titleSize: '<?'\n    },\n    controller: function() {\n        let vm = this;\n    }\n});","'use strict';\n\nangular.module('queryBuilder.components', []);","// Module\nvar code = \"<div layout-padding class=\\\"query-builder\\\">\\n    <form name=\\\"queryBuilder\\\">\\n        <rule-set allow-empty-rules=\\\"$ctrl.allowEmptyRules\\\"\\n                condition-options=\\\"$ctrl.conditionOptions\\\"\\n                default-child-rule=\\\"$ctrl.childRule\\\"\\n                default-child-rule-set=\\\"$ctrl.childRuleSet\\\"\\n                data=\\\"$ctrl.data\\\"\\n                display-options=\\\"$ctrl.displayOptions\\\"\\n                fields=\\\"$ctrl.fields\\\"\\n                initial-condition=\\\"{{$ctrl.initialCondition}}\\\"\\n                is-first=\\\"true\\\"\\n                mix-rules=\\\"$ctrl.mixRules\\\"\\n                mode=\\\"{{$ctrl.mode}}\\\"\\n                operators=\\\"$ctrl.operators\\\"\\n                pre-defined-rules=\\\"$ctrl.preDefinedRules\\\"\\n                user-input-names=\\\"$ctrl.userInputNames\\\">\\n        </rule-set>\\n    </form>\\n    <div layout=\\\"row\\\" layout-align=\\\"start center\\\">\\n        <div flex=\\\"10\\\">Builder form valid?: </div>\\n        <md-icon flex=\\\"20\\\" ng-class=\\\"{'valid': queryBuilder.$valid, 'invalid': !queryBuilder.$valid}\\\">{{queryBuilder.$valid ? 'check_circle' : 'error'}}</md-icon>\\n        <div flex=\\\"70\\\"></div>\\n    </div>\\n    <div ng-messages=\\\"queryBuilder.$error\\\" style=\\\"color:maroon\\\">\\n        <div ng-message=\\\"invalidRuleSize\\\">{{$ctrl.displayOptions.entityTerms.ruleSet || 'Rule Set'}} must have 2 or more children</div>\\n        <div ng-message=\\\"required\\\">A required field is missing</div>\\n    </div>\\n    <collapsible-panel ng-if=\\\"$ctrl.displayOptions.includeModel\\\"\\n                       switch=\\\"$ctrl.showModel\\\"\\n                       title=\\\"Model\\\"\\n                       title-size=\\\"4\\\">\\n    </collapsible-panel>\\n    <div ng-if=\\\"$ctrl.displayOptions.includeModel && $ctrl.showModel\\\" layout=\\\"row\\\">\\n        <div layout=\\\"column\\\" flex=\\\"45\\\">\\n            <h5>Builder Model</h5>\\n            <div class=\\\"model-container\\\">\\n                <pre>{{$ctrl.data|json}}</pre>\\n            </div>\\n        </div>\\n        <div flex=\\\"10\\\" layout=\\\"row\\\" layout-align=\\\"center start\\\" class=\\\"map-button-container\\\">\\n            <md-icon ng-click=\\\"$ctrl.mapModel()\\\">\\n                forward\\n                <md-tooltip>Map to predicate tree model</md-tooltip>\\n            </md-icon>\\n        </div>\\n        <div layout=\\\"column\\\" flex=\\\"45\\\">\\n            <h5>Predicate Tree Model</h5>\\n            <div class=\\\"model-container\\\">\\n                <pre ng-if=\\\"!$ctrl.predicateTree\\\">Predicate tree will appear here</pre>\\n                <pre ng-if=\\\"$ctrl.predicateTree\\\">{{$ctrl.predicateTree|json}}</pre>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";\n// Exports\nmodule.exports = code;","'use strict';\n\n/**\n * A component to allow the construct of both simple and complex filters.\n * \n * The bindings are:\n * @param {boolean} allowEmptyRules Indicates if empty rules are allowed. Defaults to false.\n * @param {Object} childRule The model to initialise a Rule with.\n * @param {Object} childRuleSet The model to initialise a Rule Set with.\n * @param {Object} conditionOptions The options for Rule and Rule Set when AND/OR conditions are selected. These determine\n * if using Rules/Rule Sets is enabled or rendered when a particular condition is selected.\n * @param {Object} data The underlying model object which is used to build the filter.\n * @param {Object} displayOptions The options which affect the display of the component. These include using text buttons,\n * showing the underlying model and which terms to use for the conditions.\n * @param {Array} fields The fields to use when constructing a Rule.\n * @param {string} initialCondition The initial condition value - choices are 'AND' or 'OR'.\n * @param {boolean} mixRules Indicates if the Rule Set can contain both Rules and Rule Sets.\n * @param {string} mode Which mode the component will be in - choices are 'build' or 'entry'.\n * @param {Array} operators The operators to use when constructing a Rule.\n * @param {Array} preDefinedRules The filters to select from. Only applies to 'entry' mode.\n */\nangular.module('queryBuilder.components')\n.component('queryBuilder', {\n    template: require('./query-builder.component.html'),\n    bindings: {\n        allowEmptyRules: '<?',\n        childRule: '<?',\n        childRuleSet: '<?',\n        conditionOptions: '<?',\n        data: '=?',\n        displayOptions: '<?',\n        fields: '<?',\n        initialCondition: '@?',\n        mixRules: '<?',\n        mode: '@?',\n        operators: '<?',\n        preDefinedRules: '<?'\n    },\n    controller: ['filterTransformationService', 'queryBuilderConstants', queryBuilderController]\n});\n\nfunction queryBuilderController(filterTransformationService, queryBuilderConstants) {\n    let vm = this;\n    vm.$onInit = onInit;\n    vm.mapModel = mapModel;\n    \n    /**\n     * Initialisation of this component.\n     */\n    function onInit() {\n        if (vm.allowEmptyRules === undefined) {\n            vm.allowEmptyRules = true;\n        }\n        vm.data = vm.data || {\n            condition: 'and',\n            rules: []\n        };\n        vm.conditionOptions = vm.conditionOptions || {\n            'and': {\n                rule: true,\n                ruleSet: true\n            },\n            'or': {\n                rule: true,\n                ruleSet: true\n            },\n            'criteria': {\n                rule: false,\n                ruleSet: true\n            }\n        };\n        vm.displayOptions = vm.displayOptions || {\n            entityTerms: {\n                rule: 'Rule',\n                ruleSet: 'Rule Set'\n            },\n            includeModel: false,\n            logicalTerms: {\n                and: 'AND',\n                or: 'OR'\n            },\n            useTextButtons: false\n        };\n        vm.mode = vm.mode || queryBuilderConstants.Mode.BUILD;\n        vm.showModel = false;\n        vm.userInputNames = [];\n    }\n\n    /**\n     * Maps the underlying model (vm.data) to a predicate tree.\n     */\n    function mapModel() {\n        vm.predicateTree = filterTransformationService.getPredicateTree(vm.data);\n    }\n\n}","'use strict';\n\nangular.module('queryBuilder.components')\n.constant('queryBuilderConstants', {\n    Entity: {\n        RULE: 'rule',\n        RULE_SET: 'ruleSet'\n    },\n    Mode: {\n        BUILD: 'build',\n        ENTRY: 'entry'\n    },\n    Operators: {\n        CONTAINS: 'contains',\n        DOES_NOT_CONTAIN: 'does-not-contain',\n        DOES_NOT_END_WITH: 'does-not-end-with',\n        DOES_NOT_MATCH: 'does-not-match',\n        DOES_NOT_START_WITH: 'does-not-start-with',\n        ENDS_WITH: 'ends-with',\n        EXACT_MATCH: 'exact-match',\n        REGEX: 'regex',\n        STARTS_WITH: 'starts-with'\n    }\n});","// Module\nvar code = \"<div class=\\\"rule-set-container\\\">\\n    <div class=\\\"rule-set\\\" layout=\\\"row\\\">\\n        <div flex=\\\"50\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\">\\n            <and-or-switch ng-if=\\\"$ctrl.mode === 'build' || ($ctrl.mode === 'entry' && $ctrl.data.condition !== 'criteria')\\\"\\n                           data=\\\"$ctrl.data\\\"\\n                           display-options=\\\"$ctrl.displayOptions.logicalTerms\\\"\\n                           disable-and=\\\"$ctrl.disableAnd\\\"\\n                           disable-or=\\\"$ctrl.disableOr\\\">\\n            </and-or-switch>\\n            <div ng-if=\\\"$ctrl.mode === 'entry' && !$ctrl.isFirst && $ctrl.selectedFilter\\\" layout=\\\"row\\\" flex=\\\"100\\\">\\n                <div flex=\\\"60\\\">{{$ctrl.data.name}}</div>\\n                <div flex=\\\"5\\\"></div>\\n                <div ng-if=\\\"!$ctrl.data.rules.length\\\" flex=\\\"35\\\" class=\\\"read-only-message\\\">\\n                    {{$ctrl.displayOptions.entityTerms.rule || 'Rule Set'}} requires no user inputs\\n                </div>\\n            </div>\\n            <div ng-if=\\\"$ctrl.isFirst && !$ctrl.data.rules.length\\\">\\n                Please use the buttons on the right to add a {{$ctrl.displayOptions.entityTerms.rule|| 'Rule'}}/{{$ctrl.displayOptions.entityTerms.ruleSet || 'Rule Set'}}\\n            </div>\\n            <div ng-if=\\\"!$ctrl.isFirst && $ctrl.data.condition !== 'criteria' && $ctrl.data.rules.length < 2\\\">\\n                A {{$ctrl.displayOptions.entityTerms.ruleSet || 'Rule Set'}} must have 2 or more children\\n            </div>\\n            <div flex=\\\"100\\\" ng-if=\\\"$ctrl.mode === 'entry' && $ctrl.data.type === 'ruleSet' && $ctrl.data.condition === 'criteria' && !$ctrl.isFirst && !$ctrl.selectedFilter\\\">\\n                <md-select required ng-model=\\\"$ctrl.selectedFilter\\\" placeholder=\\\"Choose a filter\\\" aria-label=\\\"Choose a filter\\\" ng-change=\\\"$ctrl.selectedFilterChanged()\\\">\\n                    <md-option ng-value=\\\"filter\\\" ng-repeat=\\\"filter in $ctrl.preDefinedRules\\\">{{filter.name}}</md-option>\\n                </md-select>\\n            </div>\\n        </div>\\n        <div flex=\\\"50\\\" layout=\\\"row\\\" layout-align=\\\"end center\\\">\\n            <div>\\n                <md-icon class=\\\"add-rule\\\"\\n                         ng-click=\\\"$ctrl.checkCondition($ctrl.data.condition, 'rule', 'enable') && $ctrl.addRule()\\\" \\n                         ng-disabled=\\\"!$ctrl.checkCondition($ctrl.data.condition, 'rule', 'enable') || !$ctrl.fieldsAvailable()\\\"\\n                         ng-if=\\\"!$ctrl.displayOptions.useTextButtons && $ctrl.checkCondition($ctrl.data.condition, 'rule', 'render')\\\">\\n                    add\\n                    <md-tooltip>Add {{$ctrl.displayOptions.entityTerms.rule || 'Rule'}}</md-tooltip>\\n                </md-icon>\\n            </div>\\n            <div>\\n                <md-button class=\\\"md-small md-raised add-rule\\\"\\n                           ng-click=\\\"$ctrl.checkCondition($ctrl.data.condition, 'rule', 'enable') && $ctrl.addRule()\\\" \\n                           ng-disabled=\\\"!$ctrl.checkCondition($ctrl.data.condition, 'rule', 'enable') || !$ctrl.fieldsAvailable()\\\"\\n                           ng-if=\\\"$ctrl.displayOptions.useTextButtons && $ctrl.checkCondition($ctrl.data.condition, 'rule', 'render')\\\">\\n                    + {{$ctrl.displayOptions.entityTerms.rule|| 'Rule'}}\\n                    <md-tooltip>Add {{$ctrl.displayOptions.entityTerms.rule || 'Rule'}}</md-tooltip>\\n                </md-button>\\n            </div>\\n            <div>\\n                <md-icon class=\\\"add-rule-set\\\" \\n                         ng-click=\\\"$ctrl.checkCondition($ctrl.data.condition, 'ruleSet', 'enable') && $ctrl.addRuleSet()\\\"\\n                         ng-disabled=\\\"!$ctrl.checkCondition($ctrl.data.condition, 'ruleSet', 'enable')\\\" \\n                         ng-if=\\\"!$ctrl.displayOptions.useTextButtons && $ctrl.checkCondition($ctrl.data.condition, 'ruleSet', 'render')\\\">\\n                    add_circle_outline\\n                    <md-tooltip>Add {{$ctrl.displayOptions.entityTerms.ruleSet || 'Rule Set'}}</md-tooltip>\\n                </md-icon>\\n            </div>\\n            <div>\\n                <md-button class=\\\"md-small md-raised add-rule-set\\\" \\n                         ng-click=\\\"$ctrl.checkCondition($ctrl.data.condition, 'ruleSet', 'enable') && $ctrl.addRuleSet()\\\"\\n                         ng-disabled=\\\"!$ctrl.checkCondition($ctrl.data.condition, 'ruleSet', 'enable')\\\" \\n                         ng-if=\\\"$ctrl.displayOptions.useTextButtons && $ctrl.checkCondition($ctrl.data.condition, 'ruleSet', 'render')\\\">\\n                    + {{$ctrl.displayOptions.entityTerms.ruleSet || 'Rule Set'}}\\n                    <md-tooltip>Add {{$ctrl.displayOptions.entityTerms.ruleSet || 'Rule Set'}}</md-tooltip>\\n                </md-button>\\n            </div>\\n            <div>\\n                <md-icon class=\\\"remove-rule-set\\\" \\n                         ng-if=\\\"!$ctrl.isFirst && !$ctrl.displayOptions.useTextButtons\\\" \\n                         ng-click=\\\"$ctrl.removeRuleSet()\\\">\\n                    remove_circle_outline\\n                    <md-tooltip>Remove {{$ctrl.displayOptions.entityTerms.ruleSet || 'Rule Set'}}</md-tooltip>\\n                </md-icon>\\n            </div>\\n            <div>\\n                <md-button class=\\\"md-small md-raised remove-rule-set\\\"\\n                         ng-if=\\\"!$ctrl.isFirst && $ctrl.displayOptions.useTextButtons\\\" \\n                         ng-click=\\\"$ctrl.removeRuleSet()\\\">\\n                    X\\n                    <md-tooltip>Remove {{$ctrl.displayOptions.entityTerms.ruleSet || 'Rule Set'}}</md-tooltip>\\n                </md-button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"child-rule-container\\\"\\n         ng-class=\\\"{\\n             'rule-connector': $ctrl.data.rules.length > 1 && $ctrl.data.condition !== 'criteria',\\n             'container-outline': $ctrl.data.condition !== 'criteria'\\n        }\\\"\\n         ng-repeat=\\\"rule in $ctrl.data.rules\\\">\\n        <div ng-switch=\\\"rule.type\\\">\\n            <rule ng-switch-when=\\\"rule\\\"\\n                  allow-empty=\\\"$ctrl.allowEmptyRules\\\"\\n                  data=\\\"rule\\\"\\n                  fields=\\\"$ctrl.mode === 'build' ? $ctrl.fieldsForRules : $ctrl.fields\\\"\\n                  mode=\\\"{{$ctrl.mode}}\\\"\\n                  on-field-change=\\\"$ctrl.mode === 'build' ? $ctrl.onFieldChange(newField, oldField, operator, callback) : null\\\"\\n                  on-operator-change=\\\"$ctrl.mode === 'build' ? $ctrl.onOperatorChange(newOperator, oldOperator, field) : null\\\"\\n                  on-remove=\\\"$ctrl.removeRule(rule)\\\"\\n                  operators=\\\"$ctrl.mode === 'build' ? $ctrl.operatorsByField.get(rule.field.id) : $ctrl.operators\\\"\\n                  options=\\\"$ctrl.displayOptions\\\"\\n                  user-input-names=\\\"$ctrl.userInputNames\\\">\\n            </rule>\\n            <rule-set ng-switch-when=\\\"ruleSet\\\"\\n                      allow-empty-rules=\\\"$ctrl.allowEmptyRules\\\"\\n                      condition-options=\\\"$ctrl.conditionOptions\\\"\\n                      default-child-rule=\\\"$ctrl.defaultChildRule\\\"\\n                      default-child-rule-set=\\\"$ctrl.defaultChildRuleSet\\\"\\n                      data=\\\"rule\\\"\\n                      display-options=\\\"$ctrl.displayOptions\\\"\\n                      is-first=\\\"false\\\"\\n                      fields=\\\"$ctrl.fields\\\"\\n                      initial-condition=\\\"{{$ctrl.initialCondition}}\\\"\\n                      mix-rules=\\\"$ctrl.mixRules\\\"\\n                      mode=\\\"{{$ctrl.mode}}\\\"\\n                      on-remove-rule-set=\\\"$ctrl.removeRule(rule)\\\"\\n                      operators=\\\"$ctrl.operators\\\"\\n                      pre-defined-rules=\\\"$ctrl.preDefinedRules\\\"\\n                      user-input-names=\\\"$ctrl.userInputNames\\\"\\n                      ng-model=\\\"rule\\\"\\n                      ng-attr-rule-size=\\\"{{rule.condition !== 'criteria' ? true : undefined}}\\\">\\n            </rule-set>\\n        </div>\\n    </div>\\n</div>\";\n// Exports\nmodule.exports = code;","'use strict';\n\n/**\n * A rule set is essentially a collection of rules, wrapped with a logical operator (AND/OR).\n * \n * The bindings are:\n * @param {boolean} allowEmptyRules Indicates if empty rules are allowed. Defaults to false.\n * @param {Object} data The initial data model for the component.\n */\nangular.module('queryBuilder.components')\n.component('ruleSet', {\n    template: require('./rule-set.component.html'),\n    bindings: {\n        allowEmptyRules: '<?',\n        data: '<?',\n        displayOptions: '<?',\n        conditionOptions: '<?',\n        defaultChildRule: '<?',\n        defaultChildRuleSet: '<?',\n        fields: '<?',\n        initialCondition: '@?',\n        isFirst: '<?',\n        mixRules: '<?',\n        mode: '@',\n        onRemoveRuleSet: '&',\n        operators: '<?',\n        preDefinedRules: '<?',\n        userInputNames: '<?'\n    },\n    controller: ['queryBuilderConstants', 'uuid', ruleSetController]\n});\n\nfunction ruleSetController(queryBuilderConstants, uuid) {\n    let vm = this;\n    vm.$onInit = onInit;\n    vm.addRule = addRule;\n    vm.addRuleSet = addRuleSet;\n    vm.checkCondition = checkCondition;\n    vm.fieldsAvailable = fieldsAvailable;\n    vm.onFieldChange = onFieldChange;\n    vm.onOperatorChange = onOperatorChange;\n    vm.operatorsByField = new Map();\n    vm.operatorsInUseByField = new Map();\n    vm.removeRule = removeRule;\n    vm.removeRuleSet = removeRuleSet;\n    vm.savedConditionOptions;\n    vm.selectedFilterChanged = selectedFilterChanged;\n\n    const Operators = queryBuilderConstants.Operators;\n\n    let localConditionOptions;\n\n    /**\n     * Initialisation of this component.\n     */\n    function onInit() {\n\n        if (vm.mode !== queryBuilderConstants.Mode.BUILD && vm.mode !== queryBuilderConstants.Mode.ENTRY) {\n            let errorMessage = `mode must be either ` +\n                               `'${queryBuilderConstants.Mode.BUILD}' or '${queryBuilderConstants.Mode.ENTRY}'`;\n            throw new Error(errorMessage);\n        }\n\n        if (vm.allowEmptyRules === undefined) {\n            vm.allowEmptyRules = true;\n        }\n\n        if (vm.mixRules === undefined) {\n            vm.mixRules = true;\n        }\n        \n        if (!vm.data) {\n            vm.data = {\n                condition: 'and',\n                rules: []\n            };\n            // If an initial condition has been passed, use it\n            if (vm.initialCondition) {\n                vm.data.condition = vm.initialCondition;\n            }\n        }\n\n        vm.disableAnd = false;\n        vm.disableOr = false;\n\n        // Remove rules that do not require input if the mode is \"entry\"\n        if (vm.mode === queryBuilderConstants.Mode.ENTRY) {\n            _filterUserInputRules();\n        }\n\n        localConditionOptions = angular.copy(vm.conditionOptions);\n\n        if (vm.data.rules.length && vm.data.condition && !vm.mixRules) {\n            let rule = vm.data.rules[0];\n            if (rule.type === queryBuilderConstants.Entity.RULE) {\n                localConditionOptions[vm.data.condition][queryBuilderConstants.Entity.RULE_SET].enable = false;\n                _applyConditionCheck(queryBuilderConstants.Entity.RULE);\n            } else {\n                localConditionOptions[vm.data.condition][queryBuilderConstants.Entity.RULE].enable = false;\n                _applyConditionCheck(queryBuilderConstants.Entity.RULE_SET);\n            }\n        }\n\n        if (vm.mode === queryBuilderConstants.Mode.BUILD) {\n\n            if (!vm.operators) {\n                throw new Error('operators must be provided in \\'build\\' mode');\n            }\n            if (!vm.fields) {\n                throw new Error('fields must be provided in \\'build\\' mode');\n            }\n\n            // Start out with all operators enabled\n            vm.operators.forEach(function(operator) {\n                operator.disabled = false;\n            });\n    \n            // Start out with all fields enabled\n            vm.fields.forEach(function(field) {\n                field.disabled = false;\n            });\n            \n            // This array will be passed to each rule within this rule set\n            vm.fieldsForRules = _.cloneDeep(vm.fields);\n            \n            vm.fields.forEach(function(field) {\n                vm.operatorsByField.set(field.id, _.cloneDeep(vm.operators));\n            });\n        }\n\n\n    }\n\n    /**\n     * Invoked when the add rule button is clicked.\n     */\n    function addRule() {\n        let rule = _getRuleTemplate();\n\n        if (vm.mode === queryBuilderConstants.Mode.BUILD) {\n            const field = _.find(vm.fieldsForRules, {disabled: false});\n            const operator = _.find(vm.operatorsByField.get(field.id), {disabled: false});\n            rule.field = {\n                id: field.id,\n                name: field.name\n            };\n            rule.operator = operator.value;\n            _updateOperatorInUseForField(rule.field, rule.operator);\n            _applyOperatorRestrictions(rule.field);\n        }\n        \n        vm.data.rules.push(rule);\n\n        if (!vm.mixRules) {\n            localConditionOptions[vm.data.condition][queryBuilderConstants.Entity.RULE_SET].enable = false;\n            _applyConditionCheck(queryBuilderConstants.Entity.RULE);\n        }\n    }\n\n    function addRuleSet() {\n        let ruleSet = _getRuleSetTemplate();\n        vm.data.rules.push(ruleSet);\n\n        if (!vm.mixRules) {\n            localConditionOptions[vm.data.condition][queryBuilderConstants.Entity.RULE].enable = false;\n            _applyConditionCheck(queryBuilderConstants.Entity.RULE_SET);\n        }\n    }\n\n    function checkCondition(condition, option, property) {\n        if (typeof localConditionOptions[condition][option] === 'boolean') {\n            return localConditionOptions[condition][option];\n        } else {\n            return localConditionOptions[condition][option] && localConditionOptions[condition][option][property];\n        }\n    }\n\n    /**\n     * Indicates if there are fields available for use when applying rules. Rules are only available if they are not\n     * disabled.\n     */\n    function fieldsAvailable() {\n        if (vm.mode === queryBuilderConstants.Mode.ENTRY) {\n            return true;\n        } else {\n            return _.find(vm.fieldsForRules, {disabled: false});\n        }\n    }\n\n    /**\n     * Callback passed to rule component and fired when the Field input is changed.\n     * The field denoted by newField will be disabled. The field denoted by oldField will be enabled.\n     * Updates the disabled flag on the use of fields within a single rule set.\n     * \n     * Build mode only.\n     * \n     * @param {Object} newField the new selected field\n     * @param {Object} oldField (optional) the previous selected field\n     * @param {string} operator the current operator value\n     * @param {Function} callback returns the new operator value if it has changed\n     */\n    function onFieldChange(newField, oldField, operator, callback) {\n        _updateOperatorInUseForField(newField, operator);\n        _updateOperatorInUseForField(oldField, operator, true);\n        _applyOperatorRestrictions(newField);\n        _applyOperatorRestrictions(oldField);\n\n        // Having applied the restrictions, the current operator might now be disabled so\n        // check this and if required, update the operator\n        let newOperator = _.find(vm.operatorsByField.get(newField.id), {disabled: false}).value;\n        if (newOperator !== operator) {\n            _updateOperatorInUseForField(newField, newOperator);\n            _updateOperatorInUseForField(newField, operator, true);\n            _applyOperatorRestrictions(newField);\n\n            // Tell the rule component about the new operator\n            callback(newOperator);\n        }\n    }\n\n    /**\n     * Callback passed to rule component and fired when the Operator input is changed.\n     * \n     * Build mode only.\n     * \n     * @param {Object} newOperator the new selected operator\n     * @param {Object} oldOperator (optional) the previous selected operator\n     * @param {string} field the current field value\n     */\n    function onOperatorChange(newOperator, oldOperator, field) {\n        _updateOperatorInUseForField(field, newOperator);\n        _updateOperatorInUseForField(field, oldOperator, true);\n        _applyOperatorRestrictions(field);\n    }\n\n    /**\n     * Callback invoked when a rule is removed from this rule set.\n     * \n     * @param {Object} rule the rule which was removed.\n     */\n    function removeRule(rule) {\n        let index = vm.data.rules.findIndex(function(r) {\n            return r.id === rule.id;\n        });\n        vm.data.rules.splice(index, 1);\n\n        if (vm.mode === queryBuilderConstants.Mode.BUILD) {\n            _updateOperatorInUseForField(rule.field, rule.operator, true);\n            _applyOperatorRestrictions(rule.field);\n        }\n\n        if (!vm.data.rules.length) {\n            localConditionOptions = angular.copy(vm.conditionOptions);\n            vm.disableAnd = false;\n            vm.disableOr = false;\n        }\n    }\n\n    function removeRuleSet() {\n        if (vm.onRemoveRuleSet) {\n            vm.onRemoveRuleSet();\n        }\n    }\n\n    function selectedFilterChanged() {\n        vm.data.name = vm.selectedFilter.name;\n        vm.data.type = vm.selectedFilter.type;\n        vm.data.rules = vm.data.rules.concat(angular.copy(vm.selectedFilter.rules));\n        _filterUserInputRules();\n    }\n\n    /* private functions */\n\n    function _applyConditionCheck(option) {\n        switch (vm.data.condition) {\n            case 'and':\n                if (!localConditionOptions.or[option].enable) {\n                    vm.disableOr = true;\n                }\n                break;\n            case 'or':\n                if (!localConditionOptions.and[option].enable) {\n                    vm.disableAnd = true;\n                }\n                break;\n        };\n    }\n\n    /**\n     * Uses the given field to apply restrictions on what operators can be used in conjunction with it. This is\n     * based upon what current operators the field is using and the rules defined within the switch statement which\n     * determine the permitted operator combinations.\n     * \n     * Build mode only.\n     * \n     * @param {Object} field The field in use.\n     */\n    function _applyOperatorRestrictions(field) {\n        const SINGLE_OPERATOR_ALLOWED = [Operators.EXACT_MATCH, Operators.REGEX];\n        const operatorsInUse = vm.operatorsInUseByField.get(field.id);\n        const allOperators = vm.operatorsByField.get(field.id);\n\n        if (operatorsInUse.length > 1) {\n            let allOperatorValues = allOperators.map(function(op) {\n                return op.value;\n            });\n            let permittedOperators = _.cloneDeep(allOperatorValues);\n            let operators = [];\n\n            operatorsInUse.forEach(function(operator) {\n                switch (operator) {\n                    case Operators.CONTAINS:\n                    case Operators.DOES_NOT_CONTAIN:\n                    case Operators.DOES_NOT_MATCH:\n                        operators = _.without(allOperatorValues, Operators.EXACT_MATCH, Operators.REGEX);\n                        break;\n                    case Operators.DOES_NOT_END_WITH:\n                        operators = _.without(allOperatorValues, Operators.EXACT_MATCH, Operators.REGEX, \n                            Operators.ENDS_WITH);\n                        break;\n                    case Operators.DOES_NOT_START_WITH:\n                        operators = _.without(allOperatorValues, Operators.EXACT_MATCH, Operators.REGEX, \n                            Operators.STARTS_WITH);\n                        break;\n                    case Operators.ENDS_WITH:\n                        operators = _.without(allOperatorValues, Operators.EXACT_MATCH, Operators.REGEX,\n                             Operators.ENDS_WITH, Operators.DOES_NOT_END_WITH);\n                        break;\n                    case Operators.STARTS_WITH:\n                        operators = _.without(allOperatorValues, Operators.EXACT_MATCH, Operators.REGEX, \n                            Operators.STARTS_WITH, Operators.DOES_NOT_START_WITH);\n                        break;\n                };\n                permittedOperators = _.intersection(permittedOperators, operators);\n            });\n\n            allOperators.forEach(function(operator) {\n                operator.disabled = permittedOperators.indexOf(operator.value) === -1;\n            });\n\n            if (!_.find(allOperators, {disabled: false})) {\n                _toggleRuleFieldUse(field.id, true);\n            } else {\n                _toggleRuleFieldUse(field.id, false);\n            }\n        } else {\n            // All operators are enabled when the field has only been used once\n            allOperators.forEach(function(operator) {\n                operator.disabled = false;\n            });\n            _toggleRuleFieldUse(field.id, false);\n        }\n\n        // Ensure that if regex or exact match have been selected, the field is no longer available\n        if (_.intersection(SINGLE_OPERATOR_ALLOWED, operatorsInUse).length) {\n            _toggleRuleFieldUse(field.id, true);\n        }\n    }\n\n    function _filterUserInputRules() {\n        let rules = [];\n        let names = [];\n        vm.data.rules.forEach(function(rule) {\n            if (rule.type === queryBuilderConstants.Entity.RULE_SET) {\n                rules.push(rule);\n            }\n            // This ensures a rule which is a user input with the same name only renders on the UI once\n            if (rule.type === queryBuilderConstants.Entity.RULE && rule.isUserInput && \n                names.indexOf(rule.userInput.name) === -1) {\n                rules.push(rule);\n                names.push(rule.userInput.name);\n            }\n        });\n        vm.data.rules = rules;\n    }\n\n    /**\n     * Returns an Object represents a new Rule.\n     * \n     * @returns {Object} a new Rule.\n     */\n    function _getRuleTemplate() {\n        const defaultTemplate = {\n            type: queryBuilderConstants.Entity.RULE,\n            field: '',\n            operator: '',\n            value: ''\n        };\n        return _getTemplate(defaultTemplate, vm.defaultChildRule);\n    }\n\n    /**\n     * Returns an Object represents a new Rule Set.\n     * \n     * @returns {Object} a new Rule Set.\n     */\n    function _getRuleSetTemplate() {\n        let defaultTemplate = {\n            type: queryBuilderConstants.Entity.RULE_SET,\n            condition: 'and',\n            rules: []\n        };\n        return _getTemplate(defaultTemplate, vm.defaultChildRuleSet);\n    }\n\n    /**\n     * Returns the template object with an id set. Uses applyTemplate if provided, otherwise uses defaultTemplate.\n     * \n     * @param {Object} defaultTemplate The default object. Uses if applyTemplate is not provided.\n     * @param {Object} applyTemplate The template to use. If not provided, defaultTemplate is used.\n     * @returns {Object} the new template.\n     */\n    function _getTemplate(defaultTemplate, applyTemplate) {\n        let id = uuid.v4();\n        let template = defaultTemplate;\n        if (applyTemplate) {\n            template = angular.copy(applyTemplate);\n        }\n        template.id = id;\n        return template;\n    }\n\n    /**\n     * Sets the disabled flag on the field identified by fieldId in the array vm.fieldsForRules.\n     * Build mode only.\n     * \n     * @param {number|string} fieldId The field id.\n     * @param {boolean} disabled value of the disabled flag to set.\n     */\n    function _toggleRuleFieldUse(fieldId, disabled) {\n        let field = _.find(vm.fieldsForRules, {id: fieldId});\n        field.disabled = disabled;\n    }\n\n    /**\n     * Updates the operatorsInUseByField map with the current operator being used by the given field.\n     * By default, the field/operator combination is added to the map but the remove parameter can be used to\n     * indicate it should be removed instead.\n     * \n     * Build mode only.\n     * \n     * @param {Object} field The field in use.\n     * @param {string} operator The operator to be added or removed.\n     * @param {boolean} remove If the field/operator combination should be removed instead of added.\n     */\n    function _updateOperatorInUseForField(field, operator, remove) {\n        let operators = vm.operatorsInUseByField.get(field.id);\n        if (!operators) {\n            operators = [];\n        }\n        if (remove) {\n            let index = operators.indexOf(operator);\n            operators.splice(index, 1);\n        } else {\n            operators.push(operator);\n        }\n        vm.operatorsInUseByField.set(field.id, operators);\n    }\n    \n}","// Module\nvar code = \"<div class=\\\"rule-container\\\" id=\\\"{{$ctrl.data.id}}\\\">\\n    <div layout=\\\"row\\\" layout-align=\\\"start center\\\" ng-if=\\\"$ctrl.mode === 'build'\\\">\\n        <md-input-container flex=\\\"15\\\">\\n            <label>Field</label>\\n            <input id=\\\"{{$ctrl.data.id + '_FIELD'}}\\\" required ng-model=\\\"$ctrl.selectedField\\\" ng-if=\\\"!$ctrl.fields.length\\\">\\n            <md-select id=\\\"{{$ctrl.data.id + '_FIELD'}}\\\" ng-if=\\\"$ctrl.fields.length\\\"\\n                       ng-model=\\\"$ctrl.selectedField\\\" required\\n                       ng-change=\\\"$ctrl.selectedFieldChange($ctrl.selectedField)\\\">\\n                <md-option ng-repeat=\\\"field in $ctrl.fields\\\" ng-value=\\\"field\\\" ng-disabled=\\\"field.id !== $ctrl.selectedField.id && field.disabled\\\">\\n                    {{field.name}}\\n                </md-option>\\n            </md-select>\\n        </md-input-container>\\n        <div flex=\\\"5\\\"></div>\\n        <md-input-container flex=\\\"15\\\">\\n            <label>Operator</label>\\n            <md-select ng-model=\\\"$ctrl.selectedOperator\\\" required \\n                       ng-change=\\\"$ctrl.selectedOperatorChange($ctrl.selectedOperator)\\\"\\n                       id=\\\"{{$ctrl.data.id + '_OPERATOR'}}\\\">\\n                <md-option id=\\\"{{'OPERATOR_OPTION_' + operator.value.toUpperCase().replace('-', '_')}}\\\" \\n                           ng-repeat=\\\"operator in $ctrl.operators\\\" ng-value=\\\"operator.value\\\"\\n                           ng-disabled=\\\"(operator.disabled && operator.value !== $ctrl.selectedOperator) || ($ctrl.selectedField.options.validOperators && \\n                                        $ctrl.selectedField.options.validOperators.indexOf(operator.value) === -1)\\\">\\n                    {{operator.display}}\\n                </md-option>\\n            </md-select>\\n        </md-input-container>\\n        <div flex=\\\"5\\\"></div>\\n        <div flex=\\\"30\\\" ng-if=\\\"!$ctrl.selectedField\\\"></div>\\n        <md-input-container flex=\\\"30\\\" ng-if=\\\"$ctrl.selectedField && !$ctrl.selectedField.values\\\">\\n            <label>{{$ctrl.valueLabel}}</label>\\n            <input ng-required=\\\"!$ctrl.allowEmpty\\\" ng-disabled=\\\"$ctrl.data.isUserInput\\\" \\n                   ng-model=\\\"$ctrl.data.value\\\" ng-if=\\\"$ctrl.selectedField && !$ctrl.selectedField.values\\\"\\n                   id=\\\"{{$ctrl.data.id + '_VALUE'}}\\\">\\n        </md-input-container>\\n        <md-input-container flex=\\\"30\\\" class=\\\"class-type\\\"\\n                            ng-if=\\\"$ctrl.selectedField && $ctrl.selectedField.values && $ctrl.selectedField.values.length && !$ctrl.selectedField.options.multipleValues\\\">\\n            <label>{{$ctrl.valueLabel}}</label>\\n            <md-autocomplete\\n                md-input-id=\\\"{{$ctrl.data.id + '_VALUE'}}\\\"\\n                md-no-cache=\\\"true\\\"\\n                md-selected-item=\\\"$ctrl.data.value\\\"\\n                ng-blur=\\\"$ctrl.valueChanged()\\\"\\n                md-search-text=\\\"$ctrl.searchValueText\\\"\\n                md-items=\\\"item in $ctrl.valueSearch($ctrl.searchValueText)\\\"\\n                md-item-text=\\\"item\\\"\\n                md-min-length=\\\"0\\\"\\n                md-clear-button=\\\"false\\\"\\n                placeholder=\\\"{{$ctrl.data.isUserInput ? '(no value required)' : $ctrl.valueLabel}}\\\"\\n                ng-required=\\\"!$ctrl.data.isUserInput\\\"\\n                ng-disabled=\\\"$ctrl.data.isUserInput\\\">\\n                <md-item-template>\\n                    <span md-highlight-text=\\\"$ctrl.searchValueText\\\" md-highlight-flags=\\\"i\\\">{{item}}</span>\\n                </md-item-template>\\n            </md-autocomplete>\\n        </md-input-container>\\n        <md-input-container flex=\\\"30\\\" \\n                            ng-if=\\\"$ctrl.selectedField && $ctrl.selectedField.options.multipleValues\\\">\\n            <label>{{$ctrl.valueLabel}}</label>\\n            <md-select ng-model=\\\"$ctrl.data.value\\\" multiple aria-label=\\\"Select a value\\\" \\n                       placeholder=\\\"{{$ctrl.data.isUserInput ? '(no value required)' : $ctrl.valueLabel}}\\\"\\n                       ng-required=\\\"!$ctrl.data.isUserInput\\\" ng-disabled=\\\"$ctrl.data.isUserInput\\\"\\n                       id=\\\"{{$ctrl.data.id + '_VALUE'}}\\\">\\n                <md-option id=\\\"{{'VALUE_OPTION_' + value.toUpperCase()}}\\\" ng-value=\\\"value\\\" ng-repeat=\\\"value in $ctrl.selectedField.values\\\">{{value}}</md-option>\\n            </md-select>\\n        </md-input-container>\\n        <div flex=\\\"5\\\"></div>\\n        <md-input-container flex=\\\"10\\\" ng-if=\\\"$ctrl.allowEmpty\\\">\\n            <md-checkbox ng-model=\\\"$ctrl.data.isUserInput\\\" ng-change=\\\"$ctrl.userInputToggled()\\\">\\n                User Input\\n            </md-checkbox>\\n        </md-input-container>\\n        <md-input-container flex=\\\"10\\\" ng-if=\\\"$ctrl.selectedField.options.allowCaseSensitive\\\">\\n            <md-checkbox ng-model=\\\"$ctrl.data.caseSensitive\\\">\\n                Case Sensitive\\n            </md-checkbox>\\n        </md-input-container>\\n        <div flex=\\\"{{$ctrl.selectedField.options.allowCaseSensitive ? 5 : 15}}\\\"></div>\\n        <md-icon class=\\\"remove-rule\\\" flex=\\\"5\\\" ng-click=\\\"$ctrl.onRemove()\\\" ng-if=\\\"!$ctrl.options.useTextButtons\\\">\\n            remove_circle_outline\\n            <md-tooltip>Remove</md-tooltip>\\n        </md-icon>\\n        <md-button class=\\\"remove-rule md-small md-raised\\\" flex=\\\"5\\\" ng-click=\\\"$ctrl.onRemove()\\\" ng-if=\\\"$ctrl.options.useTextButtons\\\">\\n            X\\n            <md-tooltip>Remove</md-tooltip>\\n        </md-button>\\n    </div>\\n    <div layout=\\\"row\\\" layout-align=\\\"start center\\\" ng-if=\\\"$ctrl.mode === 'build' && $ctrl.allowEmpty && $ctrl.data.isUserInput && $ctrl.data.userInput\\\">\\n        <md-input-container flex=\\\"35\\\">\\n            <label>User Input Name</label>\\n            <md-autocomplete\\n                required\\n                md-no-cache=\\\"true\\\"\\n                md-selected-item=\\\"$ctrl.data.userInput.name\\\"\\n                md-search-text=\\\"$ctrl.userInputNameSearchText\\\"\\n                md-items=\\\"item in $ctrl.userInputNameSearch($ctrl.userInputNameSearchText)\\\"\\n                md-item-text=\\\"item\\\"\\n                md-min-length=\\\"0\\\"\\n                md-clear-button=\\\"false\\\"\\n                placeholder=\\\"Choose input (type to create new)\\\"\\n                ng-blur=\\\"$ctrl.userInputNameUpdated()\\\">\\n                <md-item-template>\\n                    <span md-highlight-text=\\\"$ctrl.userInputNameSearchText\\\" md-highlight-flags=\\\"^i\\\">{{item}}</span>\\n                </md-item-template>\\n            </md-autocomplete>\\n        </md-input-container>\\n        <div flex=\\\"5\\\"></div>\\n        <md-input-container flex=\\\"15\\\">\\n            <label>Filter Type</label>\\n            <md-select ng-model=\\\"$ctrl.data.userInput.filterType\\\">\\n                <md-option value=\\\"standard\\\">Standard</md-option>\\n                <md-option value=\\\"other\\\">Other</md-option>\\n            </md-select>\\n        </md-input-container>\\n        <div flex=\\\"5\\\"></div>\\n        <md-input-container flex=\\\"10\\\">\\n            <md-checkbox ng-model=\\\"$ctrl.data.userInput.allowWildcards\\\">\\n                Allow Wilcards\\n            </md-checkbox>\\n        </md-input-container>\\n        <div flex=\\\"5\\\"></div>\\n    </div>\\n    <div layout=\\\"row\\\" ng-if=\\\"$ctrl.mode === 'entry'\\\">\\n        <md-input-container flex=\\\"60\\\">\\n            <label>{{$ctrl.data.userInput.name}}</label>\\n            <textarea ng-model=\\\"$ctrl.data.value\\\" rows=\\\"2\\\" required></textarea>\\n        </md-input-container>\\n        <div flex=\\\"15\\\"></div>\\n        <md-input-container flex=\\\"20\\\">\\n            <label>Treat as</label>\\n            <md-select ng-model=\\\"$ctrl.data.treatAs\\\" required>\\n                <md-option value=\\\"literal\\\">Literal</md-option>\\n                <md-option value=\\\"regex\\\">Regex</md-option>\\n                <md-option value=\\\"wildcards\\\" ng-if=\\\"::$ctrl.data.userInput.allowWildcards\\\">Allow Wildcards</md-option>\\n            </md-select>\\n        </md-input-container>\\n    </div>\\n</div>\";\n// Exports\nmodule.exports = code;","'use strict';\n\n/**\n * A rule defines a link between a field, operator and its value. It also allows for setting conditions on the value\n * like whether it is case sensitive. It further allows for setting the field to be a user input and define separate\n * conditions for those.\n * \n * The bindings are:\n * @param {boolean} allowEmpty Indicates if empty rule values are allowed. Defaults to true.\n * @param {Object} data The initial data model for the component.\n * @param {Array} fields The list of fields to be used in the field drop-down.\n * @param {String} mode The mode of the component - 'build' or 'entry'.\n * @param {Function} onFieldChange Callback when the field input is changed.\n * @param {Function} onOperatorChange Callback when the operator input is changed.\n * @param {Function} onRemove Callback when the rule is removed.\n * @param {Array} operators The list of operators to be used in the operator drop-down.\n * @param {Object} options Used to change the display of the component. Possible keys are:\n *   - {boolean} useTextButtons Indicates if text buttons should be used instead of md icons. \n * @param {Array} userInputNames The list of available user input names.\n */\nangular.module('queryBuilder.components')\n.component('rule', {\n    template: require('./rule.component.html'),\n    bindings: {\n        allowEmpty: '<?',\n        data: '<?',\n        fields: '<',\n        mode: '@',\n        onFieldChange: '&',\n        onOperatorChange: '&',\n        onRemove: '&',\n        operators: '<?',\n        options: '<?',\n        userInputNames: '<'\n    },\n    controller: ['queryBuilderConstants', ruleController]\n});\n\nfunction ruleController(queryBuilderConstants) {\n    let vm = this;\n    vm.$onInit = onInit;\n    vm.selectedField;\n    vm.selectedOperator;\n    vm.selectedFieldChange = selectedFieldChange;\n    vm.selectedOperatorChange = selectedOperatorChange;\n    vm.userInputNameSearch = userInputNameSearch;\n    vm.userInputNameUpdated = userInputNameUpdated;\n    vm.userInputToggled = userInputToggled;\n    vm.valueChanged = valueChanged;\n    vm.valueLabel;\n    vm.valueSearch = valueSearch;\n\n    function onInit() {\n        if (vm.allowEmpty === undefined) {\n            vm.allowEmpty = true;\n        }\n        vm.fields = vm.fields !== undefined ? vm.fields : [];\n        vm.operators = vm.operators || [\n            {\n                description: 'that equals',\n                display: '=',\n                value: 'equals'\n            },\n            {\n                description: 'that is less than',\n                display: '<',\n                value: 'less-than'\n            },\n            {\n                description: 'that is greater than',\n                display: '>',\n                value: 'greater-than'\n            }\n        ];\n\n        let matchedField;\n        if (vm.data.field) {\n            // find field in the list of available fields\n            matchedField = _.find(vm.fields, {id: vm.data.field.id});\n        } else if (vm.fields.length) {\n            // Set selected field to be first enabled one\n            matchedField = _.find(vm.fields, {disabled: false});\n        }\n        vm.selectedField = matchedField;\n        if (vm.selectedField) {\n            vm.data.field = {\n                id: vm.selectedField.id,\n                name: vm.selectedField.name\n            };\n        }\n\n        if (!vm.data.operator) {\n            // Set default to operator field\n            vm.data.operator = vm.operators[0].value;\n        }\n        vm.selectedOperator = vm.data.operator;\n\n        if (vm.mode === queryBuilderConstants.Mode.ENTRY) {\n            vm.data.treatAs = 'literal';\n        }\n\n        if (vm.selectedField && vm.data.operator) {\n            _constructValueLabel(vm.selectedField, vm.data.operator);\n        }\n    }\n\n    /**\n     * Fired when Field input has been changed.\n     * \n     * @param {Object} field The selected field.\n     */\n    function selectedFieldChange(field) {\n        // If the field has its own set of values to select, clear the current value\n        if (field.values && field.values.length) {\n            vm.data.value = '';\n        }\n\n        let oldField = _.find(vm.fields, {id: vm.data.field.id});\n\n        // Update the field model\n        vm.data.field = {\n            id: field.id,\n            name: field.name\n        };\n\n        // Check that the current operator is valid for use with the new field - if not, find one which is valid\n        if (field.options && field.options.validOperators && field.options.validOperators.indexOf(vm.data.operator) === -1) {\n            let operator = _.find(vm.operators, function(operator) {\n                return field.options.validOperators.indexOf(operator.value) > -1;\n            });\n            vm.data.operator = operator.value;\n        }\n\n        _constructValueLabel(field, vm.data.operator);\n\n        if (vm.onFieldChange) {\n            let callback = function(operator) {\n                vm.selectedOperator = operator;\n                vm.data.operator = operator;\n                _constructValueLabel(field, vm.data.operator);\n            };\n            vm.onFieldChange({newField: field, oldField: oldField, operator: vm.data.operator, callback: callback});\n        }\n    }\n\n    /**\n     * Fired when Operator input has been changed.\n     * \n     * @param {String} operator The new selected operator.\n     */\n    function selectedOperatorChange(operator) {\n        const oldOperator = vm.data.operator;\n        vm.data.operator = operator;\n\n        _constructValueLabel(vm.data.field, operator);\n\n        if (vm.onOperatorChange) {\n            vm.onOperatorChange({newOperator: operator, oldOperator: oldOperator, field: vm.data.field});\n        }\n    }\n\n    /**\n     * Search the possible user input names using the given text. The search is case insensitive and\n     * all values are returned if text is not provided or empty.\n     * \n     * @param {String} text The search text.\n     * @returns {Array} User input names which partially match or match the text provided. \n     */\n    function userInputNameSearch(text) {\n        if (!text || !text.length) {\n            return vm.userInputNames;\n        }\n        let names = vm.userInputNames.filter(function(name) {\n            return name.toLowerCase().indexOf(text.toLowerCase()) > -1;\n        });\n        return names;\n    }\n\n    /**\n     * Fired when focus has been taken away from the user input name field.\n     * \n     * If the text entered for the name has not be used before, it is added to the userInputNames array for possible future use.\n     * If the user input name has not been set, vm.userInputNameSearchText is used instead.\n     */\n    function userInputNameUpdated() {\n        if (vm.userInputNameSearchText) {\n            if (vm.userInputNameSearchText.length && vm.userInputNames.indexOf(vm.userInputNameSearchText) === -1) {\n                vm.userInputNames.push(vm.userInputNameSearchText);\n            }\n            if (vm.userInputNameSearchText.length && !vm.data.userInput.name) {\n                vm.data.userInput.name = vm.userInputNameSearchText;\n            }\n        }\n    }\n\n    /**\n     * Fired when the user input checkbox is changed.\n     */\n    function userInputToggled() {\n        if (vm.data.isUserInput) {\n            vm.data.userInput = {\n                filterType: 'standard',\n                name: ''\n            };\n            vm.userInputNameSearchText = '';\n        } else {\n            vm.data.userInput = {};\n        }\n    }\n\n    /**\n     * Fired when focus is taken off the value field.\n     * \n     * If a value has not be selected but search text has been entered, set it as the value.\n     */\n    function valueChanged() {\n        if (!vm.data.value && vm.searchValueText && vm.searchValueText.length) {\n            vm.data.value = vm.searchValueText;\n        }\n    }\n\n    /**\n     * Search the possible values of the field using the given text. The search is case insensitive and\n     * all values are returned if text is not provided or empty.\n     * \n     * @param {String} text The search text.\n     * @returns {Array} Values which partially match or match the text provided. \n     */\n    function valueSearch(text) {\n        if (!text || !text.length) {\n            return vm.selectedField.values;\n        }\n        let values = vm.selectedField.values.filter(function(value) {\n            return value.toLowerCase().indexOf(text.toLowerCase()) > -1;\n        });\n        return values;\n    }\n\n    /* private functions */\n\n    /**\n     * Constructs the label used for the value field which is based upon field and operator inputs.\n     * e.g. 'Class that exactly matches'. This is set on vm.valueLabel.\n     * \n     * @param {Object} field The current field.\n     * @param {String} operatorValue The current operator value.\n     */\n    function _constructValueLabel(field, operatorValue) {\n        let operator = _.find(vm.operators, function(operator) {\n            return operator.value === operatorValue;\n        });\n        vm.valueLabel = `${field.name} ${operator.description}`;\n    }\n    \n}","'use strict';\n\nangular.module('queryBuilder.demo')\n.factory('demoDataService', function(queryBuilderConstants) {\n\n    const DATA = {\n        build: {\n          data: {\n            condition: 'and',\n            rules: []\n          },\n          displayOptions: {\n            entityTerms: {\n              rule: 'Criteria',\n              ruleSet: 'Group'\n            },\n            includeModel: false,\n            logicalTerms: {\n              and: 'AND',\n              or: 'OR'\n            },\n            useTextButtons: true\n          },\n          show: false,\n          conditionOptions: {\n            'and': {\n              rule: {\n                enable: true,\n                render: true\n              },\n              ruleSet: {\n                enable: true,\n                render: true\n              }\n            },\n            'or': {\n              rule: {\n                enable: false,\n                render: false\n              },\n              ruleSet: {\n                enable: true,\n                render: true\n              }\n            }\n          }\n        },\n        entry: {\n          conditionOptions: {\n            'and': {\n              rule: true,\n              ruleSet: true\n            },\n            'or': {\n              rule: true,\n              ruleSet: true\n            },\n            'criteria': {\n              rule: false,\n              ruleSet: false\n            }\n          },\n          data: {\n            condition: 'and',\n            rules: []\n          },\n          defaultChildRule: {\n            condition: 'criteria',\n            type: queryBuilderConstants.Entity.RULE_SET,\n            rules: []\n          },\n          defaultChildRuleSet: {\n            condition: 'and',\n            type: queryBuilderConstants.Entity.RULE_SET,\n            rules: []\n          },\n          displayOptions: {\n            entityTerms: {\n              rule: 'Filter',\n              ruleSet: 'Group'\n            },\n            includeModel: false,\n            logicalTerms: {\n              and: 'AND',\n              or: 'OR'\n            },\n            useTextButtons: true\n          },\n          show: false\n        },\n        filter: {\n          allowEmptyRules: false,\n          data: {\n            condition: 'and',\n            rules: [\n              {\n                type: queryBuilderConstants.Entity.RULE,\n                field: {\n                  id: 11,\n                  name: 'Any',\n                  options: {\n                      allowCaseSensitive: true\n                  }\n                },\n                operator: 'exact-match',\n                value: '',\n                id: 'b62a994e-847a-4fdf-a288-d74adc0a82ce'\n              }\n            ]\n          },\n          displayOptions: {\n            entityTerms: {\n              rule: 'Criteria',\n              ruleSet: 'Group'\n            },\n            includeModel: false,\n            logicalTerms: {\n              and: 'AND',\n              or: 'OR'\n            },\n            useTextButtons: true\n          },\n          show: false,\n          conditionOptions: {\n            'and': {\n              rule: {\n                enable: true,\n                render: true\n              },\n              ruleSet: {\n                enable: false,\n                render: false\n              }\n            },\n            'or': {\n              rule: {\n                enable: false,\n                render: false\n              },\n              ruleSet: {\n                enable: false,\n                render: false\n              }\n            }\n          }\n        },\n      };\n\n    return {\n        getData: getData\n    };\n\n    function getData(key) {\n        return angular.copy(DATA[key]);\n    }\n\n});","// Module\nvar code = \"<div layout=\\\"row\\\">\\n    <md-switch ng-model=\\\"$ctrl.data.useTextButtons\\\" ng-change=\\\"$ctrl.useTextButtonsChanged({id: $ctrl.id, val: $ctrl.data.useTextButtons})\\\">Use text buttons</md-switch>\\n    <md-switch ng-model=\\\"$ctrl.data.includeModel\\\" ng-change=\\\"$ctrl.includeModelChanged({id: $ctrl.id, val: $ctrl.data.includeModel})\\\">Show Model</md-switch>\\n    <md-switch ng-model=\\\"$ctrl.data.logicTerms\\\" ng-change=\\\"$ctrl.logicTermsChanged({id: $ctrl.id, val: $ctrl.data.logicTerms})\\\">Use terms ALL/ANY</md-switch>\\n</div>\";\n// Exports\nmodule.exports = code;","'use strict';\n\nangular.module('queryBuilder.demo')\n.component('demoOptions', {\n    template: require('./demo-options.component.html'),\n    bindings: {\n        data: '<?',\n        id: '@',\n        includeModelChanged: '&?',\n        logicTermsChanged: '&?',\n        useTextButtonsChanged: '&?'\n    },\n    controller: [demoOptionsController]\n});\n\nfunction demoOptionsController() {\n    let vm = this;\n}","'use strict';\r\n\r\nangular.module('queryBuilder.demo')\r\n\r\n.config(['$routeProvider', function($routeProvider) {\r\n  $routeProvider.when('/QueryBuilder/demo', {\r\n    template: require('./demo.html'),\r\n    controller: ['$mdDialog', 'demoDataService', 'fieldDataService', 'filterDataService', 'ruleDataService', demoController],\r\n    controllerAs: 'vm'\r\n  });\r\n}])\r\n\r\n.controller('demoController', demoController);\r\n\r\nfunction demoController($mdDialog, demoDataService, fieldDataService, filterDataService, ruleDataService) {\r\n  let vm = this;\r\n  vm.demos = {\r\n    build: demoDataService.getData('build'),\r\n    entry: demoDataService.getData('entry'),\r\n    filter: demoDataService.getData('filter')\r\n  };\r\n  vm.fields = fieldDataService.getFields();\r\n  vm.includeModelChanged = includeModelChanged;\r\n  vm.logicTerms = false;\r\n  vm.logicTermsChanged = logicTermsChanged;\r\n  vm.openDialog = openDialog;\r\n  vm.operators = ruleDataService.getOperators();\r\n  vm.queryFilters = filterDataService.getFilters();\r\n  vm.useTextButtonsChanged = useTextButtonsChanged;\r\n\r\n  activate();\r\n\r\n  function activate() {\r\n    vm.quickFilterFields = angular.copy(vm.fields);\r\n    vm.quickFilterFields.splice(0, 0, {\r\n      id: vm.quickFilterFields.length + 1,\r\n      name: 'Any',\r\n      options: {\r\n          allowCaseSensitive: true\r\n      }\r\n    });\r\n    vm.options = {\r\n      build: {\r\n        includeModel: vm.demos.build.displayOptions.includeModel,\r\n        logicTerms: false,\r\n        useTextButtons: vm.demos.build.displayOptions.useTextButtons \r\n      },\r\n      entry: {\r\n        includeModel: vm.demos.entry.displayOptions.includeModel,\r\n        logicTerms: false,\r\n        useTextButtons: vm.demos.entry.displayOptions.useTextButtons\r\n      }\r\n    };\r\n  }\r\n\r\n  function logicTermsChanged(id, val) {\r\n    if (val) {\r\n      vm.demos[id].displayOptions.logicalTerms.and = 'ALL';\r\n      vm.demos[id].displayOptions.logicalTerms.or = 'ANY';\r\n    } else {\r\n      vm.demos[id].displayOptions.logicalTerms.and = 'AND';\r\n      vm.demos[id].displayOptions.logicalTerms.or = 'OR';\r\n    }\r\n  }\r\n\r\n  function openDialog(ev) {\r\n    vm.demos.filter = demoDataService.getData('filter');\r\n\r\n    $mdDialog.show({\r\n      bindToController: true,\r\n      clickOutsideToClose: true,\r\n      controller: ['$scope', '$mdDialog', DialogController],\r\n      controllerAs: 'vm',\r\n      locals: {\r\n        builderData: vm.demos.filter,\r\n        fields: vm.quickFilterFields,\r\n        operators: vm.operators,\r\n        title: 'Quick Filter'\r\n      },\r\n      targetEvent: ev,\r\n      template: require('./demo.dialog.html')\r\n    })\r\n  };\r\n\r\n  function DialogController($scope, $mdDialog) {\r\n    let vm = this;\r\n    vm.close = close;\r\n    \r\n    function close() {\r\n      $mdDialog.cancel();\r\n    }\r\n\r\n  }\r\n\r\n  function includeModelChanged(id, val) {\r\n    vm.demos[id].displayOptions.includeModel = val;\r\n  }\r\n  \r\n  function useTextButtonsChanged(id, val) {\r\n    vm.demos[id].displayOptions.useTextButtons = val;\r\n  }\r\n  \r\n}","// Module\nvar code = \"<md-dialog class=\\\"demo-dialog\\\">\\n    <md-toolbar>\\n        <div class=\\\"md-toolbar-tools\\\">\\n            <h2>{{vm.title}}</h2>\\n        </div>\\n    </md-toolbar>\\n    <md-dialog-content>\\n        <div class=\\\"md-dialog-content\\\">\\n            <query-builder allow-empty-rules=\\\"vm.builderData.allowEmptyRules\\\"\\n                           condition-options=\\\"vm.builderData.conditionOptions\\\"\\n                           data=\\\"vm.builderData.data\\\"\\n                           display-options=\\\"vm.builderData.displayOptions\\\"\\n                           fields=\\\"vm.fields\\\"\\n                           initial-condition=\\\"and\\\"\\n                           mix-rules=\\\"false\\\"\\n                           mode=\\\"build\\\"\\n                           operators=\\\"vm.operators\\\">\\n            </query-builder>\\n        </div>\\n    </md-dialog-content>\\n    <md-dialog-actions layout=\\\"row\\\">\\n        <span flex></span>\\n        <md-button ng-click=\\\"vm.close()\\\">Close</md-button>\\n    </md-dialog-actions>\\n</md-dialog>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<md-card class=\\\"main-container\\\" layout-padding>\\r\\n    <h2>Filter Builder</h2>\\r\\n    <p>Each section shows the builder with a different config/view set. Click the down arrow to expand.</p>\\r\\n    <collapsible-panel switch=\\\"vm.demos.build.show\\\" title=\\\"Filter builder (in build mode)\\\" title-size=\\\"3\\\"></collapsible-panel>\\r\\n    <div ng-show=\\\"vm.demos.build.show\\\">\\r\\n        <demo-options data=\\\"vm.options.build\\\"\\r\\n                      id=\\\"build\\\" \\r\\n                      include-model-changed=\\\"vm.includeModelChanged(id, val)\\\"\\r\\n                      logic-terms-changed=\\\"vm.logicTermsChanged(id, val)\\\"\\r\\n                      use-text-buttons-changed=\\\"vm.useTextButtonsChanged(id, val)\\\">\\r\\n        </demo-options>\\r\\n        <query-builder condition-options=\\\"vm.demos.build.conditionOptions\\\"\\r\\n                       data=\\\"vm.demos.build.data\\\"\\r\\n                       display-options=\\\"vm.demos.build.displayOptions\\\"\\r\\n                       fields=\\\"vm.fields\\\"\\r\\n                       initial-condition=\\\"and\\\"\\r\\n                       mix-rules=\\\"false\\\"\\r\\n                       mode=\\\"build\\\"\\r\\n                       operators=\\\"vm.operators\\\">\\r\\n        </query-builder>\\r\\n    </div>\\r\\n    <md-divider></md-divider>\\r\\n    <collapsible-panel switch=\\\"vm.demos.filter.show\\\" title=\\\"Quick filter\\\" title-size=\\\"3\\\"></collapsible-panel>\\r\\n    <div ng-show=\\\"vm.demos.filter.show\\\">\\r\\n        <md-button ng-click=\\\"vm.openDialog($event)\\\">Click to open Quick Filter dialog</md-button>\\r\\n    </div>\\r\\n    <md-divider></md-divider>\\r\\n    <collapsible-panel switch=\\\"vm.demos.entry.show\\\" title=\\\"Query form (in entry mode)\\\" title-size=\\\"3\\\"></collapsible-panel>\\r\\n    <div ng-show=\\\"vm.demos.entry.show\\\">\\r\\n        <demo-options data=\\\"vm.options.entry\\\"\\r\\n                      id=\\\"entry\\\" \\r\\n                      include-model-changed=\\\"vm.includeModelChanged(id, val)\\\"\\r\\n                      logic-terms-changed=\\\"vm.logicTermsChanged(id, val)\\\"\\r\\n                      use-text-buttons-changed=\\\"vm.useTextButtonsChanged(id, val)\\\">\\r\\n        </demo-options>\\r\\n        <query-builder child-rule=\\\"vm.demos.entry.defaultChildRule\\\"\\r\\n                       child-rule-set=\\\"vm.demos.entry.defaultChildRuleSet\\\"\\r\\n                       condition-options=\\\"vm.demos.entry.conditionOptions\\\"\\r\\n                       data=\\\"vm.demos.entry.data\\\"\\r\\n                       display-options=\\\"vm.demos.entry.displayOptions\\\"\\r\\n                       fields=\\\"vm.fields\\\"\\r\\n                       mode=\\\"entry\\\"\\r\\n                       pre-defined-rules=\\\"vm.queryFilters\\\">\\r\\n        </query-builder>\\r\\n    </div>\\r\\n</md-card>\\r\\n\\r\\n\\r\\n\";\n// Exports\nmodule.exports = code;","angular.module('queryBuilder.demo', ['ngRoute'])","angular.module('queryBuilder.directives', [])","'use strict';\n\nangular.module('queryBuilder.directives')\n.directive('ruleSize', function () { \n    return {\n      require: 'ngModel',\n      link: function(scope, elem, attr, ngModel) {\n\n        \n        function validate() {\n          let rules = ngModel.$modelValue.rules;\n          if (rules.length > 1) {\n            ngModel.$setValidity('invalidRuleSize', true);\n          } else {\n            ngModel.$setValidity('invalidRuleSize', false);\n          }\n        }\n        \n        let ruleSizePresent = attr.ruleSize;\n        if (ruleSizePresent) {\n          scope.$watch(function(newValue, oldValue) {\n            validate();\n          });\n        }\n      }\n    };\n  });","'use strict';\n\nangular.module('queryBuilder.services')\n.factory('fieldDataService', function() {\n\n    return {\n        getFields: getFields\n    };\n\n    function getFields() {\n        let filters = [\n            {\n                id: 1,\n                name: 'Attribution',\n                values: [\n                    'COMMON',\n                    'CAT',\n                    'DOG'\n                ],\n                options: {\n                    allowCaseSensitive: false,\n                    multipleValues: true,\n                    validOperators: ['exact-match']\n                }\n            },\n            {\n                id: 2,\n                name: 'Class',\n                values: [],\n                options: {\n                    allowCaseSensitive: true\n                }\n            },\n            {\n                id: 3,\n                name: 'Rule',\n                options: {\n                    allowCaseSensitive: true\n                }\n            },\n            {\n                id: 4,\n                name: 'Scope',\n                options: {\n                    allowCaseSensitive: true\n                }\n            },\n            {\n                id: 5,\n                name: 'Security',\n                options: {\n                    allowCaseSensitive: true\n                }\n            },\n            {\n                id: 6,\n                name: 'Service',\n                options: {\n                    allowCaseSensitive: true\n                }\n            },\n            {\n                id: 7,\n                name: 'Tech',\n                options: {\n                    allowCaseSensitive: true\n                }\n            },\n            {\n                id: 8,\n                name: 'Type',\n                values: [],\n                options: {\n                    allowCaseSensitive: true\n                }\n            },\n            {\n                id: 9,\n                name: 'Universe',\n                options: {\n                    allowCaseSensitive: true\n                }\n            },\n            {\n                id: 10,\n                name: 'Value',\n                options: {\n                    allowCaseSensitive: true\n                }\n            },\n        ];\n\n        // Populate class and type with some data\n        for (let i = 1; i <= 100; i++) {\n            filters[1].values.push('Class' + i);\n            filters[7].values.push('Type' + i);\n        }\n\n        return filters;\n    }\n\n});","'use strict';\n\nangular.module('queryBuilder.services')\n.factory('filterDataService', function(queryBuilderConstants) {\n\n    return {\n        getFilters: getFilters\n    };\n\n    /**\n     * Some filters data - in real app, this will come from database.\n     * @returns {Array}\n     */\n    function getFilters() {\n        return [\n            {\n                id: 1,\n                name: 'Filter 1 - type filter',\n                type: queryBuilderConstants.Entity.RULE_SET,\n                condition: 'and',\n                rules: [\n                    {\n                        id: '1-1',\n                        type: queryBuilderConstants.Entity.RULE,\n                        field: 'class',\n                        operator: 'equals',\n                        value: 'class1'\n                    },\n                    {\n                        id: '1-2',\n                        type: queryBuilderConstants.Entity.RULE,\n                        field: 'type',\n                        operator: 'equals',\n                        value: '',\n                        isUserInput: true,\n                        userInput: {\n                            allowWildcards: false,\n                            name: 'type'\n                        }\n                    }\n                ]\n            },\n            {\n                id: 2,\n                name: 'Filter 2 - class filter',\n                type: queryBuilderConstants.Entity.RULE_SET,\n                condition: 'and',\n                rules: [\n                    {\n                        id: '1-1',\n                        type: queryBuilderConstants.Entity.RULE,\n                        field: 'class',\n                        operator: 'equals',\n                        value: '',\n                        isUserInput: true,\n                        userInput: {\n                            allowWildcards: true,\n                            name: 'class'\n                        }\n                    },\n                    {\n                        id: '1-2',\n                        type: queryBuilderConstants.Entity.RULE,\n                        field: queryBuilderConstants.Entity.RULE,\n                        operator: 'equals',\n                        value: 'rule1'\n                    }\n                ]\n            },\n            {\n                id: 3,\n                name: 'Filter 3 - class & rule filter, different inputs',\n                type: queryBuilderConstants.Entity.RULE_SET,\n                condition: 'and',\n                rules: [\n                    {\n                        id: '1-1',\n                        type: queryBuilderConstants.Entity.RULE,\n                        field: 'class',\n                        operator: 'equals',\n                        value: '',\n                        isUserInput: true,\n                        userInput: {\n                            allowWildcards: false,\n                            name: 'class'\n                        }\n                    },\n                    {\n                        id: '1-2',\n                        type: queryBuilderConstants.Entity.RULE,\n                        field: queryBuilderConstants.Entity.RULE,\n                        operator: 'equals',\n                        value: '',\n                        isUserInput: true,\n                        userInput: {\n                            allowWildcards: false,\n                            name: queryBuilderConstants.Entity.RULE\n                        }\n                    },\n                    {\n                        id: '1-3',\n                        type: queryBuilderConstants.Entity.RULE,\n                        field: 'type',\n                        operator: 'equals',\n                        value: 'type1'\n                    }\n                ]\n            },\n            {\n                id: 4,\n                name: 'Filter 4 - class & rule filter, same inputs',\n                type: queryBuilderConstants.Entity.RULE_SET,\n                condition: 'and',\n                rules: [\n                    {\n                        id: '1-1',\n                        type: queryBuilderConstants.Entity.RULE,\n                        field: 'class',\n                        operator: 'equals',\n                        value: '',\n                        isUserInput: true,\n                        userInput: {\n                            allowWildcards: false,\n                            name: 'Enter a value used for both class and rule'\n                        }\n                    },\n                    {\n                        id: '1-2',\n                        type: queryBuilderConstants.Entity.RULE,\n                        field: queryBuilderConstants.Entity.RULE,\n                        operator: 'equals',\n                        value: '',\n                        isUserInput: true,\n                        userInput: {\n                            allowWildcards: false,\n                            name: 'Enter a value used for both class and rule'\n                        }\n                    },\n                    {\n                        id: '1-3',\n                        type: queryBuilderConstants.Entity.RULE,\n                        field: 'type',\n                        operator: 'equals',\n                        value: 'type1'\n                    }\n                ]\n            },\n            {\n                id: 5,\n                name: 'Filter 5 - read only, no user inputs',\n                type: queryBuilderConstants.Entity.RULE_SET,\n                condition: 'and',\n                rules: [\n                    {\n                        id: '1-1',\n                        type: queryBuilderConstants.Entity.RULE,\n                        field: 'class',\n                        operator: 'equals',\n                        value: 'class',\n                        isUserInput: false,\n                        userInput: {}\n                    },\n                    {\n                        id: '1-2',\n                        type: queryBuilderConstants.Entity.RULE,\n                        field: queryBuilderConstants.Entity.RULE,\n                        operator: 'equals',\n                        value: 'rule1',\n                        isUserInput: false,\n                        userInput: {}\n                    }\n                ]\n            }\n        ];\n    }\n\n});","'use strict';\n\nangular.module('queryBuilder.services')\n.factory('filterTransformationService', function(queryBuilderConstants) {\n\n    const Operators = queryBuilderConstants.Operators;\n\n    return {\n        getPredicateTree: getPredicateTree\n    };\n\n    /**\n     * Maps the given filter builder model to a predicate tree.\n     * \n     * @param {Object} filterBuilderModel The model used by the filter builder component.\n     * @returns {Object} a predicate tree.\n     */\n    function getPredicateTree(filterBuilderModel) {\n        return _mapRuleSet(filterBuilderModel);\n    }\n\n    function _mapRule(rule, criteria) {\n        const criteriaNameByFieldName = {\n            'Class': 'CLASS',\n            'Rule': 'RULE',\n            'Scope': 'SCOPE',\n            'Security': 'SECURITY',\n            'Service' : 'SERVICE',\n            'Tech': 'TECH',\n            'Type': 'TYPE',\n            'Universe': 'UNIVERSE',\n            'Value': 'VALUE'\n        };\n        let field = criteriaNameByFieldName[rule.field.name];\n        let values = _mapValues(rule.operator, rule.value);\n        criteria[field] = values;\n    }\n\n    function _mapRuleSet(ruleSet, criteria = {}) {\n\n        const predicateTree = {};\n        \n        let ruleSets = ruleSet.rules.filter(function(rule) {\n            return rule.type === queryBuilderConstants.Entity.RULE_SET\n        });\n        if (ruleSets.length) {\n            predicateTree.type = ruleSet.condition.toUpperCase();\n            predicateTree.children = [];\n        } else {\n            predicateTree.type = 'MATCH';\n            predicateTree.criteria = criteria;\n        }\n\n        ruleSet.rules.forEach(function(rule) {\n            switch(rule.type) {\n                case queryBuilderConstants.Entity.RULE:\n                    if (rule.field.name === 'Attribution') {\n                        predicateTree.attributions = rule.value;\n                    } else {\n                        _mapRule(rule, criteria);\n                    }\n                    break;\n                case queryBuilderConstants.Entity.RULE_SET:\n                    predicateTree.children.push(_mapRuleSet(rule));\n                    break;\n            }\n        });\n\n        return predicateTree;\n    }\n\n    function _mapValues(operator, values) {\n        let vals = Array.isArray(values) ? values : [values];\n        let result = vals.map(function(val) {\n            switch(operator) {\n                case Operators.CONTAINS:\n                    return _.escapeRegExp(val);\n                case Operators.ENDS_WITH:\n                    return _.escapeRegExp(val) + '$';\n                case Operators.EXACT_MATCH:\n                    return '^' + _.escapeRegExp(val) + '$';\n                case Operators.REGEX:\n                    return `${val}`;\n                case Operators.STARTS_WITH:\n                    return '^' + _.escapeRegExp(val);\n                default:\n                    throw new Error(`Unknown operator ${operator}`);\n            }\n        });\n        \n        return result;\n    }\n\n});","'use strict';\n\nangular.module('queryBuilder.services')\n.factory('ruleDataService', function(queryBuilderConstants) {\n\n    const Operators = queryBuilderConstants.Operators;\n\n    return {\n        getOperators: getOperators\n    };\n\n    function getOperators() {\n        return [\n            {\n                description: 'exactly matches',\n                display: 'Exact Match',\n                value: Operators.EXACT_MATCH\n            },\n            {\n                description: 'matches regex',\n                display: 'Regex',\n                value: Operators.REGEX\n            },\n            {\n                description: 'contains',\n                display: 'Contains',\n                value: Operators.CONTAINS\n            },\n            {\n                description: 'starts with',\n                display: 'Starts with',\n                value: Operators.STARTS_WITH\n            },\n            {\n                description: 'ends with',\n                display: 'Ends with',\n                value: Operators.ENDS_WITH\n            },\n            {\n                description: 'does not match',\n                display: 'Does Not Match',\n                value: Operators.DOES_NOT_MATCH\n            },\n            {\n                description: 'does not contain',\n                display: 'Does Not Contain',\n                value: Operators.DOES_NOT_CONTAIN\n            },\n            {\n                description: 'does not start with',\n                display: 'Does Not Start With',\n                value: Operators.DOES_NOT_START_WITH\n            },\n            {\n                description: 'does not end with',\n                display: 'Does Not End With',\n                value: Operators.DOES_NOT_END_WITH\n            }\n        ];\n    }\n\n});","'use strict';\n\nangular.module('queryBuilder.services', []);"],"sourceRoot":""}